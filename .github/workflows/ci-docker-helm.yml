name: CI â€” Build, Push Docker & Update Helm

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-and-push:
    name: Build changed services, push images, update Helm
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      # Assumption: you set these secrets in the repo settings
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Determine changed services
        id: changed
        run: |
          # make sure we have history to diff against
          git fetch --no-tags --prune --unshallow || true

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            BASE_SHA="${{ github.event.before }}"
          fi

          if [ -z "$BASE_SHA" ] || [ "$BASE_SHA" = "0000000000000000000000000000000000000000" ]; then
            git diff --name-only HEAD~1 HEAD > changed_files.txt || true
          else
            git diff --name-only $BASE_SHA ${{ github.sha }} > changed_files.txt || true
          fi

          echo "Changed files:"; cat changed_files.txt || true

          # detect top-level service names under src/<service>/
          SERVICES=$(cat changed_files.txt | awk -F/ '/^src\//{print $2}' | grep -v '^$' | sort -u | tr '\n' ' ')

          # fallback: if nothing matched, check if repo root files changed (then build everything)
          if [ -z "$SERVICES" ]; then
            echo "No service-specific changes detected; will scan for Dockerfiles to build any service with a Dockerfile"
            SERVICES=$(find src -maxdepth 2 -type f -name Dockerfile -printf '%h\n' | awk -F/ '{print $2}' | sort -u | tr '\n' ' ')
          fi

          echo "services=$SERVICES" >> $GITHUB_OUTPUT

      - name: Prepare environment variables
        id: prep
        run: |
          echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build & push changed images
        if: steps.changed.outputs.services != ''
        run: |
          set -euo pipefail
          SERVICES="${{ steps.changed.outputs.services }}"
          echo "Will build services: $SERVICES"

          for svc in $SERVICES; do
            CONTEXT=src/$svc
            DOCKERFILE=$CONTEXT/Dockerfile
            if [ ! -f "$DOCKERFILE" ]; then
              echo "Skipping $svc: no Dockerfile at $DOCKERFILE"
              continue
            fi

            IMAGE=${{ env.DOCKERHUB_USERNAME }}/$svc
            TAG=${SHORT_SHA}
            echo "Building and pushing $IMAGE:$TAG"

            # Build and push using docker buildx
            docker buildx build --platform linux/amd64,linux/arm64 \
              --tag ${IMAGE}:${TAG} --tag ${IMAGE}:latest \
              --push $CONTEXT

            # record mapping to file for later Helm update
            echo "$svc|$IMAGE|$TAG" >> /tmp/pushed_images.txt
          done

      - name: Update Helm charts with new image tags
        if: steps.changed.outputs.services != ''
        run: |
          set -euo pipefail
          if [ ! -f /tmp/pushed_images.txt ]; then
            echo "No images were pushed, skipping Helm updates"
            exit 0
          fi

          # Ensure PyYAML is available
          python3 -m pip install --user pyyaml
          python3 .github/scripts/update_helm_values.py /tmp/pushed_images.txt

      - name: Commit & push Helm value changes
        if: steps.changed.outputs.services != ''
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add -A src/*/chart/values.yaml || true
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "chore(ci): update Helm image repositories/tags [skip ci]"
          git push

      - name: No-op if nothing changed
        if: steps.changed.outputs.services == ''
        run: echo "No services detected as changed; nothing to do"
